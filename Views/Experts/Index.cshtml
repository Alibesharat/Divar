@model divar.DAL.Models.Expert
@{
  ViewData["Title"] = " داشبورد کارشناس ";
}



<div class="row">
  </br></br>
  <div class="col s12 m6 offset-m3">
    <div class="card gray-color">
      <div class="card-content black-text">
        <span class="card-title center">مهندس @Model.FullName    </span>

      </div>

    </div>
  </div>
</div>

 <div class="row">
          @foreach (var item in Model.Reservations)
          {
            <div class="col s12 m6 offset-m3">
              <div class="card gray-color" onclick="fireUp(@item.Id)">
                <div class="card-content black-text">
                    <span class="card-title center"> @item.PostTitle    </span>
                      <br/>
                    <p>تاریخ درخواست بازدید : @item.BookTime.ToPersianDateTextify()  </p>
                    <br/>
                    <p>نام درخواست دهنده : @item.FullName</p>
                     <br/>
                    <p> نوع سفارش : @item.ExpertOption.GetDisplayName()</p>
                     <br/>
                    <p> وضعیت سفارش : @item.ReviewStatus.GetDisplayName()</p>
                     <br/>
                </div>
              </div>
            </div>
          }
        </div>


   
<script>
    async function fireUp(reservationId) {
        const { value: reviewStatus } = await Swal.fire({
            title: "تغییر وضعیت سفارش",
            input: "select",
            inputOptions: {
                3: "در حال کارشناسی",     // ReviewInProgress
                4: "پایان کارشناسی"       // ReviewCompleted
            },
            inputPlaceholder: "انتخاب کنید",
            showCancelButton: true,
            inputValidator: (value) => {
                return new Promise((resolve) => {
                    if (!value) {
                        resolve("لطفاً یک وضعیت را انتخاب کنید!"); // Prompt if no selection
                    } else {
                        resolve();
                    }
                });
            }
        });

        if (reviewStatus) {
            // Ask for expert review result
            const { value: expertReviewResult } = await Swal.fire({
                title: 'نتیجه کارشناسی',
                input: 'textarea',
                inputPlaceholder: 'لطفاً نتیجه کارشناسی را وارد کنید...',
                showCancelButton: true,
                confirmButtonText: 'تأیید'
            });

            if (expertReviewResult) {
                // Update reservation with the selected status and review result
                await updateReservation(reservationId, reviewStatus, expertReviewResult);
            }
        }
    }

    async function updateReservation(reservationId, reviewStatus, expertReviewResult) {
        try {
            const response = await fetch('/Experts/UpdateReservation', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': $('input[name="__RequestVerificationToken"]').val() // CSRF token if needed
                },
                body: JSON.stringify({
                    id: reservationId,
                    reviewStatus: reviewStatus,
                    expertReviewResult: expertReviewResult
                })
            });

            if (!response.ok) {
                const errorData = await response.json();
                Swal.fire(`Error: ${errorData}`);
            } else {
                Swal.fire('وضعیت سفارش با موفقیت بروزرسانی شد.'); // Success message
               setTimeout(function(){
   window.location.reload();
}, 5000);
            }
        } catch (error) {
            Swal.fire(`Request failed: ${error}`); // Handle errors
        }
    }
</script>

